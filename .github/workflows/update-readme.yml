name: Update README with Recent GitHub Activity

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 * * * *'  # This will run the workflow every hour (adjust as necessary)

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Pull Recent GitHub Activities
      id: get-activities
      uses: actions/github-script@v6
      with:
        script: |
          const username = 'gjrahul1';  // Replace with your GitHub username
          const perPage = 5;  // Number of events to fetch

          try {
            // Use github.request() to call the GitHub API
            const { data: events } = await github.request('GET /users/{username}/events/public', {
              username: username
            });

            const activities = events.map(event => {
              const repo = event.repo.name;
              const url = `https://github.com/${repo}`;
              let action;

              switch (event.type) {
                case 'PushEvent':
                  action = 'pushed to';
                  break;
                case 'PullRequestEvent':
                  action = 'opened a pull request in';
                  break;
                case 'IssuesEvent':
                  action = 'opened an issue in';
                  break;
                case 'ForkEvent':
                  action = 'forked';
                  break;
                default:
                  action = 'did something in';
              }

              return `- ${action} [${repo}](${url})`;
            }).join('\n');

            return activities;
          } catch (error) {
            core.setFailed(`Error fetching activities: ${error.message}`);
            return '';
          }

    - name: Log Activities
      run: |
        activities="${{ steps.get-activities.outputs.result }}"
        echo "Fetched Activities: $activities"

    - name: Check if Activities Exist
      run: |
        activities="${{ steps.get-activities.outputs.result }}"
        if [ -z "$activities" ]; then
          echo "No activities found. Skipping README update."
          exit 1
        fi

    - name: Update README with Activities
      run: |
        echo "Updating README with activities"
        activities="${{ steps.get-activities.outputs.result }}"
        readme=$(cat README.md)
        echo "Original README content: $readme"

        # Escape parentheses by replacing '(' with '\(' and ')' with '\)'
        activities_escaped=$(echo "$activities" | sed 's/(/\\(/g' | sed 's/)/\\)/g')

        updated_readme=$(echo "$readme" | sed -e "/<!--START_SECTION:activity-->/, /<!--END_SECTION:activity-->/c\<!--START_SECTION:activity-->\n$activities_escaped\n<!--END_SECTION:activity-->")
        
        # Log the updated README content
        echo "Updated README content: $updated_readme"

        # Write the updated content back to README.md
        echo "$updated_readme" > README.md

    - name: Commit and Push Changes
      run: |
        echo "Committing changes..."
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        
        # Check if there are any changes to commit
        git status
        
        # Only commit if there are changes
        git add README.md
        git diff README.md  # Show the diff to verify changes

        git commit -m 'Update recent activities in README' || echo "No changes to commit"

        # Push the changes to the repo
        git push || echo "Push failed"
      env:
        GH_TOKEN: ${{ secrets.ReadMe_WorkFlow_Display }}  # Correctly reference the secret here
